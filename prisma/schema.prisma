// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  //directUrl = env("DIRECT_URL")
}

model User {
  id    Int @id @default(autoincrement())
  email String @unique
  name  String
  password String
  image      String?
  bio         String?
  phone       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  city        String?
  role        Role @default(USER)

  posts     Post[] 
  interests  Category[]  @relation("UserInterests")
  comments  Comment[]

  likedPosts    Post[]   @relation("PostLikes")
  favoritedPosts Post[]  @relation("PostFavorites")


}



model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  comments  Comment[]

   categories Category[]  @relation("PostCategories")

  userId    Int   
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  likedBy     User[]   @relation("PostLikes")
  favoritedBy User[]   @relation("PostFavorites")

}



model Category {
  id        Int      @id @default(autoincrement())
  name      CategoryTagType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts      Post[]       @relation("PostCategories")

  users      User[]      @relation("UserInterests")
  
}



model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  postId    Int   
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  userId    Int   
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


enum Role {
  USER
  ADMIN
  MODERATOR
}


enum CategoryTagType {
  MUSIC
  SPORTS
  ART
  TECH
  EDUCATION
  FOOD
  TRAVEL
  HEALTH
  FASHION
  BUSINESS
  ENTERTAINMENT
  LIFESTYLE
  CAMPING
  GAMING
}
